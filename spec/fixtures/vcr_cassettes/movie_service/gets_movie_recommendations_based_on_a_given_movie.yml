---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/10439/recommendations?api_key=Private
      movie key&language=en-US&page=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.8.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 19 Oct 2021 01:58:02 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=28800
      X-Memc:
      - HIT
      X-Memc-Key:
      - 26d69733c60974e30543a9c2edfe47906760b2be
      X-Memc-Age:
      - '2254'
      X-Memc-Expires:
      - '14592'
      Etag:
      - W/"e4a0f25f3412dc4c303594eb96697136"
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 e158a5cd644f102abc630a9f56b59d78.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - 0TsOdgtSckp5gVbl-7gCFHi_aGDpMwD5-8t-K_kdvzeVDHZ7h2n1iw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 19 Oct 2021 01:58:02 GMT
recorded_with: VCR 6.0.0
